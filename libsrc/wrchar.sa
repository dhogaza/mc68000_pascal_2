WRCHAR   IDNT     2,2      Write a single character
         TTL      Write a single character
* NOTICE OF COPYRIGHT AND OWNERSHIP OF SOFTWARE:
*
*  Copyright (C) 1982, 1983, 1984, 1985, 1986, 1987, 1988,
*                1989, 1990 Oregon Software, Inc.
*  All Rights Reserved.
*
*  This program is the property of Oregon Software.  The program or
*  parts of it may be copied and used only as provided under a signed
*  license agreement with Oregon Software.  Any support purchased from
*  Oregon Software does not apply to user-modified programs.  All copies
*  of this program must display this notice and all copyright notices.
*
*
*  Release version: 0045  Level: 1
*  Processor: MC68000
*  System: VERSADOS
*  Subsystem: STANDARD
*
* Write a single character
*
* Last modified by KRIS on 26-Nov-1990 14:06:08
* Purpose:
         IFEQ     1
Update release version for PL-GS0-GS0 at 2.3.0.1
         ENDC
*
* commonly used output routines (required for error processing)
*
         INCLUDE  LIBDEF
         INCLUDE  LIBMAC
         PAGE
*
* p_wtc -- write(file,char)
*
         PROC     P_WTC,<F,ADDRESS,CH,CHAR,CH_FWIDTH,INTEGER>

         BEGIN    P_WTC,A0/A3/A4/D0/D1
         CHECKIO  F,OUTPUT
         MOVE.L   CH_FWIDTH(A6),D1  get field width
         BLE.S    WCH3              ignore if not positive
         SUB.L    #1,D1             yes, count the char itself
         BEQ.S    WCH2              no leading spaces
WCH1
         MOVE.B   #' ',D0           get a space
         JSB      P_WCH             write it to file
         SUB.L    #1,D1             count space
         BNE.S    WCH1              write all leading spaces
WCH2
         MOVE.B   CH(A6),D0         get the char itself
         JSB      P_WCH             write it to file
WCH3
         ENDPR    P_WTC
*
* p_wtc_o -- write(output,char)
*
         PROC     P_WTC_O,<CH_O,CHAR,CH_FW_O,INTEGER>


         BEGIN    P_WTC_O
         PEA      G.OUTPUT(A5)      push pointer to standard output
         MOVE.B   CH_O(A6),-(SP)    copy char
         MOVE.L   CH_FW_O(A6),-(SP) copy field width
         BSR      P_WTC             write(file,char)
         ADD.W    #10,SP            kill temporary stack frame
         ENDPR    P_WTC_O
         END

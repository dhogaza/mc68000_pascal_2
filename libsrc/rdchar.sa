RDCHAR   IDNT     2,2      Read character routine
         TTL      Read character routine
* NOTICE OF COPYRIGHT AND OWNERSHIP OF SOFTWARE:
*
*  Copyright (C) 1982, 1983, 1984, 1985, 1986, 1987, 1988,
*                1989, 1990 Oregon Software, Inc.
*  All Rights Reserved.
*
*  This program is the property of Oregon Software.  The program or
*  parts of it may be copied and used only as provided under a signed
*  license agreement with Oregon Software.  Any support purchased from
*  Oregon Software does not apply to user-modified programs.  All copies
*  of this program must display this notice and all copyright notices.
*
*
*  Release version: 0045  Level: 1
*  Processor: MC68000
*  System: VERSADOS
*  Subsystem: STANDARD
*
* Read character routine
*
* Last modified by KRIS on 26-Nov-1990 14:05:52
* Purpose:
         IFEQ     1
Update release version for PL-GS0-GS0 at 2.3.0.1
         ENDC
*
* Read a single character from an input file.
*
* Pascal says that read(f,ch) is defined as
*                       ch := f^
*                       get(f)
* so that is exactly what we are going to do in this routine.  Lazy
* I/O modules at a lower lever will insure that it all comes together.
*
         INCLUDE  LIBDEF
         INCLUDE  LIBMAC
         PAGE
*
* p_rdc_i -- read(input,char)
*
         FUNC     P_RDC_I,<>,CH_I,CHAR

         BEGIN    P_RDC_I
         SUBQ     #2,SP             make room for character
         PEA      G.INPUT(A5)       push standard input
         BSR.S    P_RDC             read(file,char)
         ADDQ.L   #4,SP             pop standard input
         MOVE.W   (SP)+,CH_I(A6)    return integer
         ENDPR    P_RDC_I
*
* p_rdc -- read(file,char)
*
         FUNC     P_RDC,<F,ADDRESS>,CH,CHAR

         BEGIN    P_RDC,A0/A3/A4/D0/D1
         CHECKIO  F,INPUT
         CLR.W    CH(A6)            clear out result
         BTST     #S.DEF,F.STATUS(A4)        lazy i/o waiting for new line?
         BNE.S    RCH1              nope, so use what we have
         JSB      P_GETCH           read next character
         BRA.S    RCH2              continue...
RCH1:    MOVE.L   F.POINT(A4),A0    get buffer pointer
         MOVE.B   (A0),D0           get character from buffer
RCH2:    BTST     #S.EOF,F.STATUS(A4)        are we at end-of-file?
         BEQ.S    RCH3              nope
         ERROR    E.EOF
RCH3:    MOVE.B   D0,CH(A6)         fill in current character
         BCLR     #S.DEF,F.STATUS(A4)        buffer already used
         ENDPR    P_RDC
         END
